security:
  # ðŸ”¹ Hashage des mots de passe
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  # ðŸ”¹ User provider pour charger les utilisateurs depuis l'entity User
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  # ðŸ”¹ Role hierarchy
  role_hierarchy:
    ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_USER]
    ROLE_ADMIN: [ROLE_USER]
    ROLE_COMMERCE: [ROLE_USER]

  # ðŸ”¹ Firewalls
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      lazy: true
      provider: app_user_provider

      # ðŸ”¹ MÃ©thodes d'authentification
      form_login:
        login_path: login
        check_path: login
        default_target_path: dashboard
        username_parameter: email
        password_parameter: password

      logout:
        path: logout
        target: /

      # ðŸ”¹ Permettre Ã  un super admin de se connecter comme un autre utilisateur
      switch_user: true

  # ðŸ”¹ ContrÃ´le dâ€™accÃ¨s par rÃ´le
  access_control:
    - { path: ^/super-admin, roles: ROLE_SUPER_ADMIN }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/commerce, roles: ROLE_COMMERCE }
    - { path: ^/dashboard, roles: ROLE_USER }

# ðŸ”¹ Configuration spÃ©cifique pour l'environnement de test
when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # bcrypt lowest
        time_cost: 3 # argon2 lowest
        memory_cost: 10
